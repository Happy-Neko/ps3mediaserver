#----------------------------------------------------------------------------
# AirPlayer.conf
#
# PS3 Media Server profile for the AirPlayer app on iPad, iPhone and iPod.
# See PS3.conf for a description of all possible configuration options.
#
# This profile is still in an experimental stage.
# You are encouraged to experiment and report back the results on the forums
# at http://www.ps3mediaserver.org/.
#
# TODO: Set MediaInfo=true and configure the supported types correctly.

#----------------------------------------------------------------------------
# General informations / detection

RendererName=AirPlayer
RendererIcon=airplayer.png

# UserAgentSearch: regular expression to detect the connected renderer.
# AirPlayer has been observed using the following user agents:
#
# User-Agent: AirPlayer/1.0.09 CFNetwork/485.13.9 Darwin/11.0.0
# User-Agent: Lavf52.54.0
#
# App: AirAV
# User-Agent: AirAV/1.00 CFNetwork/548.0.4 Darwin/11.0.0

# Combined regular expression of working user agents
UserAgentSearch=AirPlayer/|Lavf|AirAV

# UserAgentAdditionalHeaders: additional HTTP header for better detection
#UserAgentAdditionalHeader=
#UserAgentAdditionalHeaderSearch=

#Basic capabilities
Video=true
Audio=true
Image=true

#----------------------------------------------------------------------------
# DLNA settings

# Use the DLNA feature seek by time and not by range
SeekByTime=true

# Serve different flavors of localization in the DLNA parameters (PAL/NTSC, NA/EU/JP)
# to allow every worldwide renderer to see the files.
#DLNALocalizationRequired=false

#----------------------------------------------------------------------------
# Transcoding/Muxing capabilities
#

# Transcode codecs for video and audio engines
# currently supported: MPEGAC3, MPEGTSAC3, MP4AVCAAC or WMV for video, PCM or MP3 for audio
TranscodeVideo=MP4AVCAAC
TranscodeAudio=WAV

# CustomMencoderQualitySettings: Overrides the MEncoder transcoding quality
# settings in PMS for this renderer. Default is empty, which means the PMS
# settings will be used.
CustomMencoderQualitySettings=preset=superfast:profile=baseline:bframes=0:nocabac:global_header:partitions=all:level=31

# CustomMencoderOptions: Overrides the MEncoder custom options in PMS for
# this renderer. Default is empty, which means the PMS
# settings will be used.
#CustomMencoderOptions =

# Use default DVD buffer size: false = greater bitrate and faster encoding,
# but can generate incompatible videos, depends of your media renderer
DefaultVBVBufSize=false

# MuxH264ToMpegTS: Set to "true" if the media renderer supports H264 and MPEG2
# in a MPEGTS file. Ignored if MediaInfo = true.
MuxH264ToMpegTS = false

# MuxDTSToMpeg: Set to "true" if the media renderer supports DTS in a MPEG
# file. Ignored if MediaInfo = true.
MuxDTSToMpeg = false

# WrapDTSIntoPCM: Set to "true" if the media renderer supports DTS wrapped
# into LPCM in a MPEG file.
WrapDTSIntoPCM = false

# MuxLPCMToMpeg: Set to "true" if the media renderer supports LPCM in a MPEG
# file. Ignored if MediaInfo = true.
MuxLPCMToMpeg = false

# Maximum bit rate supported by the media renderer (0=unlimited)
MaxVideoBitrateMbps=0

# Max Width and Height supported by the media renderer (0=unlimited)
MaxVideoWidth=0
MaxVideoHeight=0

# Does the media renderer supports only H264 L4.1 at most ?
H264Level41Limited=false

# Does music files need to be resampled at 44.1kHz?
TranscodeAudioTo441kHz=false

# Does the client need to receive transcoded video with minimal delay ?
# (Useful when the client has a small timeout delay)
#TranscodeFastStart=true

# Size of the transcoded file (unknown length) sent to the renderer (could
# determine browsing failure/success) Possible values:
# 
#           -1: Specific value working with the PS3, means perfect transcoding
#               and copying support (it is against the DLNA spec though)
#            0: size attribute is NOT sent to the renderer (default value if
#               this parameter isn't used)
# 100000000000: 100Gb, if you want to be sure that the media file is not cut
#               before the end
TranscodedVideoFileSize=1000000

#----------------------------------------------------------------------------
# Misc Images

# Rotate JPEG files based on EXIF information
AutoExifRotate=true

#----------------------------------------------------------------------------
# Use MediaInfo for faster and proper file, codec and mime type management
# system (false by default).

# FIXME: Remove these two lines when the supported definitions are functioning properly
MediaInfo=true
StreamExtensions=

# The media parser and this configuration file will recognize the following
# formats and codecs (lower case only, regular expressions are supported).
# Chosen from the most common used and supported formats and codecs.
#
#        mpegps	    (mpeg presentation stream, used in DVD Videos, VCDs, etc.)
#        mpegts     (mpeg transport stream, used in sat tv, blu rays, etc.)
#        wmv        (Windows Media Video, tag also used for asf files)
#        avi        (AVI container)
#        mp4        (ISOM/MPEG4 container, or MPEG4 codec)
#        mov        (Quicktime container, Apple)
#        flv        (Flash Video)
#        rm         (Real Media, RMVB)
#        mkv        (Matroska)
#        wav        (WAVE file)
#        wavpac     (WavPack)
#        lpcm       (Linear PCM)
#        aac        (Advanced Audio Codec)
#        ac3        (Audio Coding 3)
#        mp3        (Mpeg Audio Layer 3)
#        mpa        (Mpeg Audio)
#        ogg        (Ogg Vorbis)
#        wma        (Windows Media Audio)
#        dts        (Digital Theater Systems)
#        dtshd      (Digital Theater Systems)
#        truehd     (TrueHD)
#        eac3       (Extended AC3)
#        atrac      (Atrac)
#        flac       (Free Lossless Audio Codec)
#        ape        (Monkey's Audio)
#        ra         (Real Audio)
#        mpc        (MusePack)
#        aiff       (AIFF)
#        alac       (Apple Lossless)
#        dv         (Digital Video)
#        mpeg1      (Codec used in VCD)
#        mpeg2      (Codec used in DVD Videos and HDTV)
#        divx       (DivX Video)
#        h264       (H264)
#        mjpeg      (M-JPEG)
#        vc1        (VC-1)
#        jpg        (Jpeg)
#        png        (PNG)
#        gif        (GIF)
#        tiff       (TIFF)
#        bmp        (Bitmap)
#        und        (Undetermined, if the parser did not recognize one of above)
# Usage:
#    f: format, MANDATORY (the only conf for a 'eat everything' renderer would be f:.+)
#    m: mimetype, STRONGLY RECOMMENDED (if not declared, an estimated value is assigned)
#    v: video codec
#    a: audio codec
#    n: max nb of audio channels
#    s: max audio sample frequency in Hz
#    b: max audio bitrate in bps
#    w: max width in pixels
#    h: max height in pixels
#    other flags: right now, only qpel and gmc (see avi)
#
# In case of multiple matches, the first mime type of the list is the used one.
# Be careful with regexps such as .+ : You should not use these except when you
# are sure your renderer is quite versatile.
#
# Taken from the AirPlayer site (http://www.edavs.com/AirPlayer.shtml):
#
#   - With iPhone 3gs or iPod generation 3 32G/64G or iPhone4G or iPad, You can stream
#     almost any formats of video from your media server, XVID, AVI, RMVB, MKV, MOV, MP4,
#     M4V etc.
#   - With iPhone 3gs or iPod generation 3 32G/64G, You can stream almost any formats of
#     music from your media server, MP3, WMA, OGG, AAC etc.
#   - With eailer iPhone/iPod , You can use QuickTime plugin to view limited media formats,
#     MOV, MP4, M4V, MP3, WMA, MP3, AAC.
#   - Support photo browser.
#   - Support photo thumbnails.
#
# gives:

# [Supported video formats]: 
Supported = f:mov	m:video/quicktime
Supported = f:mp4	v:mp4|h264	a:ac3|aac	n:2	m:video/mp4

# [Supported audio formats]:
Supported = f:wav	a:dts|lpcm	n:2	s:48000	m:audio/wav
Supported = f:wav	n:2	s:48000	m:audio/wav
Supported = f:mp3	n:2	m:audio/mpeg
Supported = f:aac	n:2	a:(?!alac).+	m:audio/x-m4a
Supported = f:wma	n:2	m:audio/x-ms-wma
Supported = f:atrac	n:2	m:audio/x-oma

# [Supported image formats]
Supported = f:jpg	m:image/jpeg
Supported = f:png	m:image/png
Supported = f:gif	m:image/gif
Supported = f:tiff	m:image/tiff

# Use faster method to create DLNA tree with MediaInfo. Not supported by some renderers,
# false by default (upnp specification violation).
CreateDLNATreeFaster = true

#----------------------------------------------------------------------------

